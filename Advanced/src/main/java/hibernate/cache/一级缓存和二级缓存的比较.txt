

并发性

每个事务都有单独的第一级缓存，二级缓存被同一个进程或集群范围内的所有事务共享。
由于每个事务都拥有单独的第一级缓存，所以一级缓存不会出现并发问题，无需提供并发访问策略；
由于多个事务会同时访问第二级缓存中相同数据，因此二级缓存必须提供适当的并发访问策略，来保证特定的事务。

过期性

处于一级缓存中的对象永远不会过期，除非应用程序显式清空缓存或者清除特定的对象。
而二级缓存中必须提供数据过期策略，如基于内存的缓存中对象的最大数目，允许对象处于缓存中的最长时间，
以及允许对象处于缓存中的最长空闲时间，物理存储介质可包括内存和硬盘。
对象存放在基于内存的缓存中，当内存中对象的数目达到数据过期策略中指定上限时，就会把其余的对象写入基于硬盘的缓存中。


SessionFactory级别的缓存又分为两类：内置缓存和外置缓存。

内置缓存：Hibernate自带的，不可卸载。
通常在Hibernate初始化阶段，Hibernate会把映射元数据和预定义的SQL语句放置到sessionFactory缓存中，
映射元数据是映射文件中数据的复制，而预定义SQL语句是Hibernate根据映射元数据推到出来的，该内置缓存是只读的。

外置缓存：也就是我们所说的二级缓存。
一个可配置的缓存插件，在默认情况下sessionFactory不会启用这个插件，外置缓存中的数据是数据库中数据的复制，外置缓存的介质可以是硬盘或内存。


二级缓存不适用的情形：
1，数据库由其他应用共享。
2，应用部署在集群环境上。

如果数据满足以下条件，则可将其纳入缓存管理：
1，数据不会被第三方应用修改。
2，数据大小在可接受的范围内。
3，数据更新频率比较低。
4，同一数据可能会被系统频繁引用。
5，非关键数据。
