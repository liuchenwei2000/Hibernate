<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="hibernate.cache">
    <class name="Worker" table="tb_workers">
        <!-- 
                    使用cache元素指明对本类对象进行缓存，并设置缓存同步策略，缓存同步策略可应用于实体类和集合属性。

缓存同步策略决定了数据对象在缓存中的存取规则，Hibernate提供了四种内置的缓存同步策略：
1，read-only
只读。对于不会发生改变的数据，可使用只读型缓存。
2，nonstrict-read-write
如果程序对并发访问下的数据同步要求不是很严格，且数据更新操作频率较低，可以采用本选项，获得较好的性能。
3，read-write
严格可读写缓存。基于时间戳判定机制，可用于对数据同步要求严格的情况，但不支持分布式缓存，这是实际应用中使用最多的同步策略。
4，transactional
事务型缓存，必须运行在JTA事务环境中。

        -->
        <cache usage="read-write" />
        <id name="id" column="pk_worker">
            <generator class="increment"/>
        </id>
        <property name="name"/>
        <property name="age"/>
    </class>
</hibernate-mapping>
