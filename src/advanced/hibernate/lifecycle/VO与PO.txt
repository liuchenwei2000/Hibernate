
将处于Transient和Detached状态的对象统称为值对象（VO，即Value Object），而将处于Persistent状态的对象称为持久对象（PO，即Persistent Object）。

由于VO、PO的概念，又引申出一些系统层次设计方面的问题。如在传统的MVC架构中，位于Model层的PO，是否允许被传递到其他层面。
由于PO的更新最终将被映射到实际数据库中，如果PO在其他层面（如View层）发生了变动，那么可能会对Model层造成意想不到的破坏。

因此，应该避免直接将PO传递到系统中的其他层面，一种解决方法是，通过构造一个新的VO，通过属性复制使其具备与PO相同的属性值，并以其为传输对象。